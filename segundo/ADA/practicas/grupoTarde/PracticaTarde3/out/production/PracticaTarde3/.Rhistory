print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
View(datos)
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Ajustar el modelo lineal
modelo <- lm(DAMAGE + COOLDOWN + DISPERSION + RANGE ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Extraer las predicciones para cada variable por separado
prediccion_damage <- coef(modelo)[2] * nuevo_score + coef(modelo)[1]
prediccion_cooldown <- coef(modelo)[3] * nuevo_score + coef(modelo)[1]
prediccion_dispersion <- coef(modelo)[4] * nuevo_score + coef(modelo)[1]
prediccion_range <- coef(modelo)[5] * nuevo_score + coef(modelo)[1]
# Mostrar las predicciones
print("Predicciones:")
print(paste("DAMAGE: ", prediccion_damage))
print(paste("COOLDOWN: ", prediccion_cooldown))
print(paste("DISPERSION: ", prediccion_dispersion))
print(paste("RANGE: ", prediccion_range))
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 14  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 16  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
prueba <- read.table(text = "RES,VAL,2,4,3,9,4,16,10,100,5,25,6,36")
View(prueba)
View(prueba)
prueba <- data.frame(
RES = c(1,2,3,4,5,6,7,8,9,10),
VAL = c(1,4,9,15,25,36,49,64,81,100)
)
View(prueba)
model <- lm(VAL ~RES , data = prueba)
model <- lm(VAL ~RES , data = prueba)
nuevos_datoss <- data.frame(RES =  11)
pred <- predict(model,nuevos_datoss)
prueba <- data.frame(
RES = c(1,2,3,4,5,6,7,8,9,10),
VAL = c(1,4,9,15,25,36,49,64,81,100)
)
model <- lm(VAL ~RES , data = prueba)
nuevos_datoss <- data.frame(RES =  11)
pred <- predict(model,nuevos_datoss)
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
prueba <- data.frame(
RES = c(1,2,3,4,5,6,7,8,9,10),
VAL = c(1,4,9,15,25,36,49,64,81,100)
)
model <- lm(VAL ~RES , data = prueba)
nuevos_datoss <- data.frame(RES =  0)
pred <- predict(model,nuevos_datoss)
# Supo
prueba <- data.frame(
RES = c(1,2,3,4,5,6,7,8,9,10),
VAL = c(2,4,6,8,10,12,14,16,18,20)
)
model <- lm(VAL ~RES , data = prueba)
nuevos_datoss <- data.frame(RES =  0)
pred <- predict(model,nuevos_datoss)
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
prueba <- data.frame(
RES = c(1,2,3,4,5,6,7,8,9,10),
VAL = c(2,4,6,8,10,12,14,16,18,20)
)
model <- lm(VAL ~RES , data = prueba)
nuevos_datoss <- data.frame(RES =  20)
pred <- predict(model,nuevos_datoss)
prueba <- data.frame(
RES = c(1,2,3,4,5,6,7,8,9,10),
VAL = c(2,4,6,8,10,12,14,16,18,20)
)
model <- lm(VAL ~RES , data = prueba)
nuevos_datoss <- data.frame(RES =  50)
pred <- predict(model,nuevos_datoss)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 16  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 20  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 20  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
datos <- read.csv("./resultados.txt")
# Supongamos que ya tienes un dataframe llamado 'datos' con las variables SCORE, DAMAGE, COOLDOWN, DISPERSION y RANGE.
# Ajustar el modelo lineal
modelo <- lm(cbind(DAMAGE, COOLDOWN, DISPERSION, RANGE) ~ SCORE, data = datos)
# Nuevo valor de SCORE para el que deseas predecir las variables
nuevo_score <- 25  # Cambia esto con el valor de SCORE que desees
# Crear un dataframe con el nuevo valor de SCORE
nuevo_datos <- data.frame(SCORE = nuevo_score)
# Predecir los valores de DAMAGE, COOLDOWN, DISPERSION y RANGE para el nuevo SCORE
prediccion <- predict(modelo, nuevo_datos)
# Mostrar las predicciones
print(prediccion)
